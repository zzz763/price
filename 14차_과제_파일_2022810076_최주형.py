# -*- coding: utf-8 -*-
"""14차 과제_파일 2022810076 최주형

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1eO6o6VostpoEl5VypLcZ5Tpp-QcnxHOB

# (실습) 파일

**기본 설정**

필요한 모듈 불러오기
"""

from pathlib import Path
from urllib.request import urlretrieve

"""데이터 텍스트 파일 서버 주소"""

base_url = "https://raw.githubusercontent.com/codingalzi/pybook/master/jupyter-book/data/"

"""다운로드 경로: 현재 작업 디렉토리의 `data` 하위 디렉토리"""

# 저장위치 지정과 생성
data_path = Path() / "data"
data_path.mkdir(parents=True, exist_ok=True)

"""파일 서버에서 지정된 파일을 동일한 파일명으로 지정된 디렉토리에 저장하는 함수"""

def myWget(filename):
    # 다운로드 대상 파일 경로
    file_url = base_url + filename

    # 저장 경로와 파일명
    target_path = data_path / filename

    return urlretrieve(file_url, target_path)

"""**쇼핑몰 파일 관련**

**문제 1**

`shopA.txt` 파일은 쇼핑몰A에서 판매하는 상품의 가격을 담고 있음을 확인해보자.
먼저 해당 파일을 다운로드 한다.
"""

myWget("shopA.txt")

"""이제 파일 전체 내용을 출력하는 코드를 작성하라.

힌트: `open()` 함수와 `with-as` 명령문 활용
"""

# 코드를 작성하세요.

with open('data/shopA.txt', mode='r', encoding='utf-8') as f:
    for line in f:
        print(line.strip())

"""**문제 2**

`shopA.txt` 파일의 내용을 확인하면, 오타가 있다. 
'오레ㄴ지' 를 '오렌지'로 변경한 후에
`shopA.txt` 파일을 열어 오타가 수정되었는지를 확인하여라.  

힌트: 파일의 `read()` 메서드, 문자열의 `replace()` 메서드

* 파일 읽기: `read()` 메서드 활용
"""

# 파일내용을 하나의 문자열로 생성하는 코드를 작성하라.

with open('data/shopA.txt', mode='r', encoding='utf-8') as f:
    lines = f.read()

lines

"""* 오타 수정: `replace()` 문자열 메서드 활용"""

# 오타를 수정하는 코드를 작성하라.
shopA_new = lines.replace("오레ㄴ지", "오렌지")

"""* 파일 저장"""

# 오타가 수정된 문자열을 파일로 저장하는 코드를 작성하라.
with open('data/shopA.txt', mode='w', encoding='utf-8') as f:
    f.write(shopA_new)

"""* 파일 내용 확인"""

# 오타가 수정되었음을 확인하는 코드를 작성하라.

with open('data/shopA.txt', mode='r', encoding='utf-8') as f:
    lines = f.read()

print(lines)

"""**문제 3**

상품명과 가격을 키-값의 쌍으로 갖는 아래 모양의 딕셔너리를 만들어라.
단, 오타가 수정된 파일을 이용해야 한다.

```python
{'우유': 2540,
 '계란': 7480,
 '생수': 980,
 '짜장라면': 3220,
 '두부': 1450,
 '콩나물': 1680,
 '김': 5480,
 '닭고기': 5980,
 '식빵': 2480,
 '바나나': 4980,
 '오렌지': 990,
 '카레': 2480,
 '만두': 6980,
 '어묵': 7980,
 '참치': 11880,
 '김치': 7980,
 '간장': 10800}
```
"""

with open('data/shopA.txt', mode='r', encoding='utf-8') as f:
    shopA_dict = {}
    for line in f:
        shopA_list = line.strip().split()
        if shopA_list == []:
            pass
        elif shopA_list[0] != '#쇼핑몰':
            name, score = shopA_list[0], int(shopA_list[1].replace("원", ""))
            shopA_dict[name] = score

shopA_dict

"""**문제 4**

`shopA.txt` 와 같이 상품명과 가격으로 이루어진 쇼핑 리스트가 포함된 파일의 이름을 입력받으면
상품명과 가격을 각각 키와 값으로 갖는 사전 객체를 반환하는 함수 `shopping()` 을 구현하라.

힌트: 문제 3을 해결하기 위해 작성한 코드를 이용한다.
"""

# 아래 코드를 완성하라. 

def shopping(shop_file):
    shop_dict = {}
    with open(f"data/{shop_file}", mode='r', encoding='utf-8') as f:
        for line in f:
            shop_list = line.strip().split()
            if shop_list == []:
                pass
            elif shop_list[0] != '#쇼핑몰':
                name, score = shop_list[0], int(shop_list[1].replace("원", ""))
                shop_dict[name] = score


    return shop_dict

print(shopping("shopA.txt"))

"""**문제 5**

쇼핑 리스트와 상품을 인자로 지정하면 상품의 가격을 반환하는 함수 `item_price()` 를 구현하라.

힌트: `shopping()` 함수를 이용한다.
"""

# 함수를 완성하라.

def item_price(shop_file, item):
    shop_dict = shopping(shop_file)
    price = shop_dict[item] 

    return price

print(item_price("shopA.txt", '김치'))

"""**문제 6**

`shopB.txt` 파일은 쇼핑몰B에서 판매하는 상품의 가격을 담고 있으며,
`shopA.txt` 파일과 동일한 방식으로 다운로드할 수 있다.

사용자가 상품을 입력하면, 쇼핑몰A와 쇼핑몰B 중 어느 쇼핑몰에서 구입하는 것이 얼마나 저렴한지를 보여주는
함수 `price_comparison()`를 작성하라.
"""

# 코드를 완성하라.

def price_comparison(item):
    myWget("shopB.txt")
    priceA = item_price("shopA.txt", item)  # 문제 5번의 item_price 함수 사용
    priceB = item_price("shopB.txt", item)
    if priceA > priceB:
        x = priceA - priceB
        return print("쇼핑몰 A에서 구입하는 것이", x, "원 저렴합니다.")
    elif priceA < priceB:
        x = priceB - priceA
        return print("쇼핑몰 B에서 구입하는 것이", x, "원 저렴합니다.")
    else:
        return print("가격이 동일합니다.")
        
price_comparison('김치')

"""**다이빙 기록 관련**

**문제 7**

[5미터 다이빙 기록 에서 등수를 확인하는 작업](https://codingalzi.github.io/pybook/files.html#sec-exp-diving-5m)과 
동일한 작업을 10미터 다이빙 기록에 대해 진행하라.
"""

# 코드를 작성하라.
myWget("results10m.txt")

scores_10m = {}
with open("data/results10m.txt", 'r') as f:
    for line in f:
        name, s_10m = line.split()[:2]
        try:
            scores_10m[name] = float(s_10m)
        except:
            continue

sorted_scores_10m = sorted(scores_10m.items(), key = lambda item: item[1], reverse=True)

print("10미터 다이빙 경기 결과\n")
count = 1
for item in sorted_scores_10m:
    print(f"{count:>3}등: {item[0]} {item[1]}")
    count += 1

"""**문제 8**

5미터 다이빙 기록과 10미터 다이빙 기록의 합에 대해 등수를 확인하는 코드를 작성하라.
"""

# 코드를 작성하라.
myWget("results5m.txt")

with open("data/results5m.txt") as f:
    results_5m_dict = {}
    for line in f:
        name, score = line.strip().split()
        if score != '점수':
            results_5m_dict[name] = score

with open("data/results10m.txt") as f:
    results_10m_dict = {}
    for line in f:
        name, score = line.strip().split()
        if score != '점수':
            results_10m_dict[name] = score

diving_results_dict = {}

for name in results_5m_dict:
    score_5m = results_5m_dict[name]
    score_10m = results_10m_dict[name]
    diving_results_dict[name] = (score_5m, score_10m)

result_5plus10 = {}
for key in diving_results_dict:
    result_5plus10[key] = float(diving_results_dict[key][0]) + float(diving_results_dict[key][1])

sorted_5plus10 = sorted(result_5plus10.items(), key = lambda item: item[1], reverse=True)

print("5미터 다이빙 결과와 10미터 다이빙 경기 합에 대한 등수\n")
count = 1
for item in sorted_5plus10:
    print(f"{count:>3}등: {item[0]} {item[1]}")
    count += 1